--- libimobiledevice-1.1.4/m4/ac_pkg_cython.m4.orig	2012-04-07 16:14:02.000000000 +0200
+++ libimobiledevice-1.1.4/m4/ac_pkg_cython.m4	2012-09-06 16:49:26.457727996 +0200
@@ -6,7 +6,7 @@
                 CYTHON=false
         elif test -n "$1" ; then
                 AC_MSG_CHECKING([for Cython version])
-                [cython_version=`$CYTHON --version 2>&1 | grep 'Cython version' | sed 's/.*\([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\).*/\1/g'`]
+                [cython_version=`$CYTHON --version 2>&1 | grep 'Cython version' | sed 's/.*\<\([0-9][0-9]*\.[0-9][0-9]*\(\.[0-9][0-9]*\)\?\).*/\1/g'`]
                 AC_MSG_RESULT([$cython_version])
                 if test -n "$cython_version" ; then
                         # Calculate the required version number components
From 84235e0834e57551028329723f4510e1dbe7bc11 Mon Sep 17 00:00:00 2001
From: Martin Szulecki
Date: Thu, 17 May 2012 13:44:31 +0000
Subject: cython: Do not override final methods as comply to Cython >= 0.16 strict check

---
diff --git a/cython/afc.pxi b/cython/afc.pxi
index cf72b69..0383471 100644
--- a/cython/afc.pxi
+++ b/cython/afc.pxi
@@ -162,7 +162,7 @@ cdef class AfcClient(BaseService):
             err = afc_client_free(self._c_client)
             self.handle_error(err)
 
-    cdef inline BaseError _error(self, int16_t ret):
+    cdef BaseError _error(self, int16_t ret):
         return AfcError(ret)
 
     cpdef list get_device_info(self):
diff --git a/cython/imobiledevice.pxd b/cython/imobiledevice.pxd
index d0d1ada..3ec8dfb 100644
--- a/cython/imobiledevice.pxd
+++ b/cython/imobiledevice.pxd
@@ -51,8 +51,8 @@ cdef class BaseService(Base):
 cdef class PropertyListService(BaseService):
     cpdef send(self, plist.Node node)
     cpdef object receive(self)
-    cdef inline int16_t _send(self, plist.plist_t node)
-    cdef inline int16_t _receive(self, plist.plist_t* c_node)
+    cdef int16_t _send(self, plist.plist_t node)
+    cdef int16_t _receive(self, plist.plist_t* c_node)
 
 cdef extern from "libimobiledevice/lockdown.h":
     cdef struct lockdownd_client_private:
diff --git a/cython/imobiledevice.pyx b/cython/imobiledevice.pyx
index ffaa3c1..9d2e13d 100644
--- a/cython/imobiledevice.pyx
+++ b/cython/imobiledevice.pyx
@@ -25,9 +25,8 @@ cdef class Base:
             return 0
         cdef BaseError err = self._error(ret)
         raise err
-        return -1
 
-    cdef inline BaseError _error(self, int16_t ret): pass
+    cdef BaseError _error(self, int16_t ret): pass
 
 cdef extern from "libimobiledevice/libimobiledevice.h":
     ctypedef enum idevice_error_t:
@@ -211,10 +210,10 @@ cdef class PropertyListService(BaseService):
                 plist.plist_free(c_node)
             raise
 
-    cdef inline int16_t _send(self, plist.plist_t node):
+    cdef int16_t _send(self, plist.plist_t node):
         raise NotImplementedError("send is not implemented")
 
-    cdef inline int16_t _receive(self, plist.plist_t* c_node):
+    cdef int16_t _receive(self, plist.plist_t* c_node):
         raise NotImplementedError("receive is not implemented")
 
 cdef class DeviceLinkService(PropertyListService):
diff --git a/cython/mobilesync.pxi b/cython/mobilesync.pxi
index 0ec4710..e610191 100644
--- a/cython/mobilesync.pxi
+++ b/cython/mobilesync.pxi
@@ -149,10 +149,10 @@ cdef class MobileSyncClient(DeviceLinkService):
                 plist.plist_free(remapping)
             raise
     
-    cdef inline int16_t _send(self, plist.plist_t node):
+    cdef int16_t _send(self, plist.plist_t node):
         return mobilesync_send(self._c_client, node)
 
-    cdef inline int16_t _receive(self, plist.plist_t* node):
+    cdef int16_t _receive(self, plist.plist_t* node):
         return mobilesync_receive(self._c_client, node)
 
     cdef inline BaseError _error(self, int16_t ret):
--
cgit v0.9.0.2
--- libimobiledevice-1.1.4/cython/imobiledevice.pxd.orig	2012-09-06 19:18:33.427541516 +0200
+++ libimobiledevice-1.1.4/cython/imobiledevice.pxd	2012-09-06 19:52:45.620832075 +0200
@@ -12,7 +12,7 @@
 
 cdef class Base:
     cdef inline int handle_error(self, int16_t ret) except -1
-    cdef inline BaseError _error(self, int16_t ret)
+    cdef BaseError _error(self, int16_t ret)
 
 cdef class iDeviceError(BaseError): pass
 
